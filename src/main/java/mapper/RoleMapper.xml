<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.RoleMapper">

	<resultMap id="roleResultMap" type="pojo.Role">
		<id column="id" property="id" />
		<id column="role_name" property="roleName" />
		<id column="note" property="note" />
	</resultMap>
	<select id="getRole" parameterType="long" resultType="role">
		select id,
		role_name as roleName, note from t_role where id = #{id}
	</select>
	<sql id="roleCol">
		id,role_name,note
	</sql>
	<select id="f"  resultMap="roleResultMap">
		select id, role_name, note from t_role
	</select>

	<select id="findRole1" parameterType="string" resultMap="roleResultMap">
		select <include refid="roleCol"/>
		from t_role
		where 0=0
		<if test="roleName !=null and roleName !=''">
			and role_name like concat('%',#{roleName},'%')
		</if>
	</select>
	<!--<select id="find" parameterType="String" resultMap="roleResultMap">-->
		<!--select * from t_role where 0=0-->
		<!--<if test="roleName ！=null and roleName!=''">-->
			<!--and role_name LIKE  concat ('%',#{roleName},'%')-->
		<!--</if>-->
	<!--</select>-->

	<select id="findRole2" parameterType="role" resultMap="roleResultMap">
		select id, role_name, note from t_role
		where 1=1
		<choose>
			<when test="id!= null and id !=''">
				AND id = #{id}
			</when>
			<when test="roleName != null and roleName !=''">
				AND role_name like concat('%', #{roleName}, '%')
			</when>
			<otherwise>
				AND note is not null
			</otherwise>
		</choose>
	</select>

	<select id="find2" parameterType="role" resultMap="roleResultMap">
		select * FROM t_role
		where 1=1
		<choose>
			<when test="id!=null and id!=''">
				and id=#{id}
			</when>
			<when test="roleName !=null and roleName !=''">
				and role_name like concat('%',#{roleName},'%')
			</when>
			<otherwise>
				and note is not null
			</otherwise>
		</choose>
	</select>

	<select id="findRole3" parameterType="role" resultMap="roleResultMap">
		select id, role_name, note from t_role
		<where>
			<if test="roleName != null and roleName !=''">
				and role_name like concat('%', #{roleName}, '%')
			</if>
			<if test="note != null and note !=''">
				and note like concat('%', #{note}, '%')
			</if>
		</where>
	</select>

	<select id="findRole4" parameterType="string" resultMap="roleResultMap">
		select id, role_name, note from t_role
		<trim prefix="where" prefixOverrides="and">
			<if test="roleName != null and roleName !=''">
				and role_name like concat('%', #{roleName}, '%')
			</if>
		</trim>
	</select>

	<select id="findRole5" parameterType="string" resultMap="roleResultMap">
		<bind name="pattern" value="'%' + _parameter + '%'" />
		SELECT id, role_name, note FROM t_role
		where role_name like #{pattern}
	</select>

	<select id="findRole6" resultMap="roleResultMap">
		<bind name="pattern_roleName" value="'%' + roleName + '%'" />
		<bind name="pattern_note" value="'%' + note + '%'" />
		SELECT id, role_name, note FROM t_role
		where role_name like
		#{pattern_roleName}
		and note like #{pattern_note}
	</select>

	<update id="updateRole" parameterType="role">
		update t_role
		<set>
			<if test="roleName != null and roleName !=''">
				role_name = #{roleName},
			</if>
			<if test="note != null and note != ''">
				note = #{note}
			</if>
		</set>
		where id = #{roleNo}
	</update>

	<select id="findRoleByNums" resultMap="roleResultMap">
		select id, role_name, note from t_role where id in
		<foreach item="id" index="index" collection="roleNoList"
			open="(" separator="," close=")">
			#{roleNo}
		</foreach>
		<foreach collection="roleNoList" index="index" item="i"
				 open="(" close=")" separator=",">

		</foreach>
	</select>
	<select id="findRoleByNums1" resultMap="roleResultMap">
		select * from t_role
		where id IN
		<foreach collection="roleNoList" index="index" item="i"
				 open="(" close=")" separator=",">
			#{i}
		</foreach>

	</select>
	<select id="getRoleTest" parameterType="string" resultMap="roleResultMap">
		select id, role_name, note from t_role
		<if test="type == 'Y'.toString()">
			where 1=1
		</if>
	</select>

</mapper>